apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"

    // Android Support
    implementation "androidx.appcompat:appcompat:${versions.android_appcompat}"
    implementation "com.google.android.material:material:${versions.android_material_design}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.android_constraint_layout}"

    // Android Architecture
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.android_lifecycle}"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:${versions.android_lifecycle}"
    implementation "androidx.paging:paging-runtime:${versions.android_paging}"
    implementation "androidx.paging:paging-rxjava2:${versions.android_paging}"
    implementation "androidx.room:room-runtime:${versions.android_room}"
    implementation "androidx.room:room-rxjava2:${versions.android_room}"
    kapt "androidx.room:room-compiler:${versions.android_room}"

    // DI
    implementation "org.koin:koin-core:${versions.di_koin}"
    implementation "org.koin:koin-android:${versions.di_koin}"
    implementation "org.koin:koin-android-viewmodel:${versions.di_koin}"

    // Network
    implementation "com.squareup.retrofit2:retrofit:${versions.network_retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.network_retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${versions.network_retrofit}"
    implementation "com.squareup.okhttp3:okhttp:${versions.network_okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.network_okhttp}"

    // Rx
    implementation "io.reactivex.rxjava2:rxandroid:${versions.rx_android}"
    implementation "io.reactivex.rxjava2:rxjava:${versions.rx_java}"
    implementation "com.trello.navi2:navi:${versions.rx_navi}"
    implementation "com.jakewharton.rxbinding3:rxbinding:${versions.rx_binding}"
    implementation "com.jakewharton.rxbinding3:rxbinding-material:${versions.rx_binding}"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:${versions.coroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:${versions.coroutines_retrofit}"

    // Image Loader
    implementation "com.github.bumptech.glide:glide:${versions.image_glide}"
    kapt "com.github.bumptech.glide:compiler:${versions.image_glide}"

    // Date Time
    implementation "net.danlew:android.joda:${versions.joda_time}"

    // Test
    testImplementation "junit:junit:${versions.test_junit}"
    androidTestImplementation "androidx.test:runner:${versions.test_runner}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${versions.test_espresso}"
}

android {
    compileSdkVersion buildConfig.compile_sdk

    defaultConfig {
        applicationId "com.wisnu.justalist"
        minSdkVersion buildConfig.min_sdk
        targetSdkVersion buildConfig.target_sdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'

        main {
            res.srcDirs = [
                    'src/main/res'
            ]
        }
    }

    androidExtensions {
        experimental = true
    }
}